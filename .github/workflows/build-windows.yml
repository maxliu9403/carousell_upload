name: Build Windows Executable

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      build_mode:
        description: 'Build mode'
        required: true
        default: 'onedir'
        type: choice
        options:
          - onefile
          - onedir

permissions:
  contents: write
  pull-requests: write

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
      # ------------------------------
      - name: Checkout code
        uses: actions/checkout@v4

      # ------------------------------
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      # ------------------------------
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller
          playwright install chromium

      # ------------------------------
      - name: Build executable (onefile)
        if: github.event.inputs.build_mode == 'onefile' || github.event.inputs.build_mode == '' || github.event.inputs.build_mode == null
        shell: pwsh
        run: |
          pyinstaller --onefile --console --name=CarousellUploader --add-data="config;config" --add-data="uploader/regions;uploader/regions" --add-data="browser;browser" --add-data="data;data" --paths=. --hidden-import=playwright --hidden-import=pyautogui --hidden-import=pyperclip --hidden-import=openpyxl --hidden-import=pandas --hidden-import=yaml --hidden-import=requests --hidden-import=PIL --hidden-import=selenium --hidden-import=webdriver_manager --hidden-import=core --hidden-import=core.config --hidden-import=core.logger --hidden-import=core.models --hidden-import=uploader --hidden-import=uploader.actions --hidden-import=uploader.config --hidden-import=uploader.core --hidden-import=uploader.factory --hidden-import=uploader.multi --hidden-import=uploader.regions --hidden-import=uploader.utils --hidden-import=browser --hidden-import=browser.browser --hidden-import=browser.browser_factory --hidden-import=browser.browser_interface --hidden-import=browser.browser_selector --hidden-import=data --hidden-import=data.excel_parser --hidden-import=data.record_manager --hidden-import=cli --hidden-import=cli.main cli/main.py
          echo "Build completed, checking output..."
          if (Test-Path "dist/CarousellUploader.exe") {
            echo "Executable created successfully"
          } else {
            echo "Executable not found"
          }

      - name: Build executable (onedir)
        if: github.event.inputs.build_mode == 'onedir'
        shell: pwsh
        run: |
          pyinstaller --onedir --console --name=CarousellUploader --add-data="config;config" --add-data="uploader/regions;uploader/regions" --add-data="browser;browser" --add-data="data;data" --paths=. --hidden-import=playwright --hidden-import=pyautogui --hidden-import=pyperclip --hidden-import=openpyxl --hidden-import=pandas --hidden-import=yaml --hidden-import=requests --hidden-import=PIL --hidden-import=selenium --hidden-import=webdriver_manager --hidden-import=core --hidden-import=core.config --hidden-import=core.logger --hidden-import=core.models --hidden-import=uploader --hidden-import=uploader.actions --hidden-import=uploader.config --hidden-import=uploader.core --hidden-import=uploader.factory --hidden-import=uploader.multi --hidden-import=uploader.regions --hidden-import=uploader.utils --hidden-import=browser --hidden-import=browser.browser --hidden-import=browser.browser_factory --hidden-import=browser.browser_interface --hidden-import=browser.browser_selector --hidden-import=data --hidden-import=data.excel_parser --hidden-import=data.record_manager --hidden-import=cli --hidden-import=cli.main cli/main.py
          echo "Build completed, checking output..."
          if (Test-Path "dist/CarousellUploader") {
            echo "Directory created successfully"
          } else {
            echo "Directory not found"
          }

      # ------------------------------
      - name: Copy config and regions to dist
        shell: pwsh
        run: |
          Write-Host "Copying config and regions into dist folder..."
          # 创建 dist/config (如果不存在)
          if (!(Test-Path "dist\config")) {
            New-Item -ItemType Directory -Path "dist\config" -Force
          }
          copy config\settings.yaml dist\config\
          copy config\settings.example.yaml dist\config\
          # 创建 dist/uploader/regions 目录结构并只复制css_selectors.yaml文件
          if (!(Test-Path "dist\uploader\regions\hk\sneakers")) {
            New-Item -ItemType Directory -Path "dist\uploader\regions\hk\sneakers" -Force
          }
          if (!(Test-Path "dist\uploader\regions\sg\sneakers")) {
            New-Item -ItemType Directory -Path "dist\uploader\regions\sg\sneakers" -Force
          }
          # 只复制css_selectors.yaml文件
          copy uploader\regions\hk\sneakers\css_selectors.yaml dist\uploader\regions\hk\sneakers\
          copy uploader\regions\sg\sneakers\css_selectors.yaml dist\uploader\regions\sg\sneakers\
          # 创建 README.txt
          echo "Carousell Uploader Windows 可执行文件" > dist\README.txt
          echo "" >> dist\README.txt
          echo "使用方法:" >> dist\README.txt
          echo "1. 确保已安装 Microsoft Visual C++ Redistributable" >> dist\README.txt
          echo "2. 直接运行 CarousellUploader.exe" >> dist\README.txt
          echo "3. 配置文件位于 config/ 目录" >> dist\README.txt
          echo "4. CSS选择器配置位于 uploader/regions/ 目录" >> dist\README.txt
          echo "" >> dist\README.txt
          echo "配置说明:" >> dist\README.txt
          echo "- 程序会优先使用外部配置文件" >> dist\README.txt
          echo "- 如果外部配置文件不存在，会使用内置配置" >> dist\README.txt
          echo "- 修改 config/settings.yaml 来调整主配置" >> dist\README.txt
          echo "- 修改 uploader/regions/*/css_selectors.yaml 来调整CSS选择器" >> dist\README.txt
          echo "" >> dist\README.txt
          echo "CSS选择器配置:" >> dist\README.txt
          echo "- HK: uploader/regions/hk/sneakers/css_selectors.yaml" >> dist\README.txt
          echo "- SG: uploader/regions/sg/sneakers/css_selectors.yaml" >> dist\README.txt
          echo "- 支持热更新，修改后程序会自动重新加载" >> dist\README.txt
          # 打印目录结构
          Write-Host "Dist folder structure:"
          Get-ChildItem -Path "dist" -Recurse -Force

      # ------------------------------
      - name: Upload onefile artifact
        if: github.event.inputs.build_mode == 'onefile' || github.event.inputs.build_mode == '' || github.event.inputs.build_mode == null
        uses: actions/upload-artifact@v4
        with:
          name: CarousellUploader-Windows-onefile
          path: |
            dist/CarousellUploader.exe
            dist/config/**
            dist/uploader/regions/**
            dist/README.txt
          retention-days: 30

      # ------------------------------
      - name: Upload onedir artifact
        if: github.event.inputs.build_mode == 'onedir'
        uses: actions/upload-artifact@v4
        with:
          name: CarousellUploader-Windows-onedir
          path: |
            dist/CarousellUploader/**
            dist/config/**
            dist/uploader/regions/**
            dist/README.txt
          retention-days: 30

      # ------------------------------
      - name: Check files before release
        if: github.ref == 'refs/heads/main'
        run: |
          echo "Checking build artifacts..."
          if (Test-Path "dist/CarousellUploader.exe") {
            echo "CarousellUploader.exe found"
          } else {
            echo "CarousellUploader.exe not found"
          }
          if (Test-Path "dist/CarousellUploader") {
            echo "CarousellUploader directory found"
          } else {
            echo "CarousellUploader directory not found"
          }
          Get-ChildItem -Path "dist" -Force

      # ------------------------------
      - name: Create zip package (onefile)
        if: github.ref == 'refs/heads/main' && (github.event.inputs.build_mode == 'onefile' || github.event.inputs.build_mode == '' || github.event.inputs.build_mode == null)
        shell: pwsh
        run: |
          Write-Host "Creating zip package for onefile mode..."
          $zip_name = "CarousellUploader-${{ github.run_number }}-onefile.zip"
          Compress-Archive -Path "dist\*" -DestinationPath "dist\$zip_name" -Force
          Write-Host "Created zip package: $zip_name"

      - name: Create release (onefile)
        if: github.ref == 'refs/heads/main' && (github.event.inputs.build_mode == 'onefile' || github.event.inputs.build_mode == '' || github.event.inputs.build_mode == null)
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/CarousellUploader-${{ github.run_number }}-onefile.zip
          tag_name: v${{ github.run_number }}-onefile
          name: Carousell Uploader v${{ github.run_number }} (onefile)
          body: |
            🚀 Carousell Uploader Windows 可执行文件 (单文件版本)
            
            ## 📦 构建信息
            - 构建时间: ${{ github.run_number }}
            - 构建模式: onefile
            - 操作系统: Windows
            
            ## 🎯 使用方法
            1. 下载并解压 zip 文件
            2. 确保目标机器已安装 Microsoft Visual C++ Redistributable
            3. 直接运行 CarousellUploader.exe
            4. 配置文件位于 config/ 目录
            5. CSS选择器配置位于 uploader/regions/ 目录
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # ------------------------------
      - name: Create zip package (onedir)
        if: github.ref == 'refs/heads/main' && github.event.inputs.build_mode == 'onedir'
        shell: pwsh
        run: |
          Write-Host "Creating zip package for onedir mode..."
          $zip_name = "CarousellUploader-${{ github.run_number }}-onedir.zip"
          Compress-Archive -Path "dist\*" -DestinationPath "dist\$zip_name" -Force
          Write-Host "Created zip package: $zip_name"

      - name: Create release (onedir)
        if: github.ref == 'refs/heads/main' && github.event.inputs.build_mode == 'onedir'
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/CarousellUploader-${{ github.run_number }}-onedir.zip
          tag_name: v${{ github.run_number }}-onedir
          name: Carousell Uploader v${{ github.run_number }} (onedir)
          body: |
            🚀 Carousell Uploader Windows 可执行文件 (单目录版本)
            
            ## 📦 构建信息
            - 构建时间: ${{ github.run_number }}
            - 构建模式: onedir
            - 操作系统: Windows
            
            ## 🎯 使用方法
            1. 下载并解压 zip 文件
            2. 确保目标机器已安装 Microsoft Visual C++ Redistributable
            3. 运行 CarousellUploader/ 目录中的 CarousellUploader.exe
            4. 配置文件位于 config/ 目录
            5. CSS选择器配置位于 uploader/regions/ 目录
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
