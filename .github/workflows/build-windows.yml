name: Build Windows Executable

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      build_mode:
        description: 'Build mode'
        required: true
        default: 'onefile'
        type: choice
        options:
          - onefile
          - onedir

permissions:
  contents: write
  pull-requests: write

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
      # ------------------------------
      - name: Checkout code
        uses: actions/checkout@v4

      # ------------------------------
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      # ------------------------------
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller
          playwright install chromium

      # ------------------------------
      - name: Build executable
        shell: pwsh
        run: |
          $build_mode = "${{ github.event.inputs.build_mode }}"
          Write-Host "Selected build mode: $build_mode"

          if ($build_mode -eq "onefile") {
              python build/build.py --mode onefile
          } else {
              python build/build.py --mode onedir
          }

      # ------------------------------
      - name: Copy config and regions to dist
        shell: pwsh
        run: |
          Write-Host "Copying config and regions into dist folder..."
          # 创建 dist/config (如果不存在)
          if (!(Test-Path "dist\config")) {
            New-Item -ItemType Directory -Path "dist\config" -Force
          }
          copy config\settings.yaml dist\config\
          copy config\settings.example.yaml dist\config\
          # 创建 dist/uploader/regions 目录结构并只复制css_selectors.yaml文件
          if (!(Test-Path "dist\uploader\regions\hk\sneakers")) {
            New-Item -ItemType Directory -Path "dist\uploader\regions\hk\sneakers" -Force
          }
          if (!(Test-Path "dist\uploader\regions\sg\sneakers")) {
            New-Item -ItemType Directory -Path "dist\uploader\regions\sg\sneakers" -Force
          }
          # 只复制css_selectors.yaml文件
          copy uploader\regions\hk\sneakers\css_selectors.yaml dist\uploader\regions\hk\sneakers\
          copy uploader\regions\sg\sneakers\css_selectors.yaml dist\uploader\regions\sg\sneakers\
          # 打印目录结构
          Write-Host "Dist folder structure:"
          Get-ChildItem -Path "dist" -Recurse -Force

      # ------------------------------
      - name: Rename executable to unique name
        shell: pwsh
        run: |
          $build_mode = "${{ github.event.inputs.build_mode }}"
          if ($build_mode -eq "onefile") {
              $exe_name = "CarousellUploader-${{ github.run_number }}.exe"
              Copy-Item "dist/CarousellUploader.exe" -Destination "dist/$exe_name"
          }

      # ------------------------------
      - name: Check dist folder contents
        shell: pwsh
        run: |
          Write-Host "Checking dist folder contents..."
          if (Test-Path "dist") {
            Get-ChildItem -Path "dist" -Recurse -Force | ForEach-Object {
              Write-Host "Found: $($_.FullName)"
            }
          } else {
            Write-Host "dist folder does not exist!"
          }

      # ------------------------------
      - name: Upload artifact (onefile)
        if: github.event.inputs.build_mode == 'onefile' || (github.event.inputs.build_mode == null && github.event_name == 'push')
        uses: actions/upload-artifact@v4
        with:
          name: CarousellUploader-Windows-onefile-${{ github.run_number }}
          path: |
            dist/CarousellUploader-${{ github.run_number }}.exe
            dist/config/**
            dist/uploader/regions/**
            dist/data/**
            dist/README.txt
          retention-days: 30

      - name: Upload artifact (onedir)
        if: github.event.inputs.build_mode == 'onedir'
        uses: actions/upload-artifact@v4
        with:
          name: CarousellUploader-Windows-onedir-${{ github.run_number }}
          path: |
            dist/CarousellUploader/**
            dist/config/**
            dist/uploader/regions/**
            dist/data/**
            dist/README.txt
          retention-days: 30

      # ------------------------------
      - name: Create release (onefile)
        if: github.ref == 'refs/heads/main' && ${{ github.event.inputs.build_mode == 'onefile' }}
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/CarousellUploader-${{ github.run_number }}.exe
          tag_name: v${{ github.run_number }}-onefile
          name: Carousell Uploader v${{ github.run_number }} (onefile)
          body: |
            🚀 Carousell Uploader Windows 可执行文件 (单文件版本)
            包含所有依赖，下载即可使用。
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create zip package (onedir)
        if: github.ref == 'refs/heads/main' && ${{ github.event.inputs.build_mode == 'onedir' }}
        shell: pwsh
        run: |
          Write-Host "Creating zip package for onedir mode..."
          $zip_name = "CarousellUploader-${{ github.run_number }}-onedir.zip"
          Compress-Archive -Path "dist\CarousellUploader\*" -DestinationPath "dist\$zip_name" -Force
          Write-Host "Created zip package: $zip_name"

      - name: Create release (onedir)
        if: github.ref == 'refs/heads/main' && ${{ github.event.inputs.build_mode == 'onedir' }}
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/CarousellUploader-${{ github.run_number }}-onedir.zip
          tag_name: v${{ github.run_number }}-onedir
          name: Carousell Uploader v${{ github.run_number }} (onedir)
          body: |
            🚀 Carousell Uploader Windows 可执行文件 (多文件目录版本)
            包含所有依赖和配置文件，下载即可使用。
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
